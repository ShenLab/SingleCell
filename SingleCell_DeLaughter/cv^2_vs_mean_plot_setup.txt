################E9.5
NO MT FILTERING

cv2_E9.5 > 1
centering_para<-10
fit <- glmgam.fit(cbind(a0=5, altilde=centering_para/means_E9.5[useForFit]), cv2_E9.5[useForFit])

WITH MT FILTERING
centering_para<- 2.3
 
plot( NULL, xaxt="n", yaxt="n",
      log="xy", xlim = c(1e-3, 1e4), ylim = c(0.8, 10^2.1),
      xlab = "mean est. count (normalized to size factor)", ylab = "squared coefficient of variation (CV^2)",
      main = "normalized est. count vs CV^2 (plotted in log10 scale)")
axis( 1, 10^(-3:4), c( "0.001", "0.01", "0.1", "1", "10", "100", "1000", "10000"))
axis( 2, 10^(0:3), c( "1", "10", "100", "1000"), las=2 )
abline( h=10^(0:3), v=10^(-3:4), col="#D0D0D0", lwd=2 )
#################################################################################



##################E11.5
cv2_E11.5 > 10^(-0.25)
centering_para<-1.2
fit <- glmgam.fit(cbind(a0=5, altilde=centering_para/means_E11.5[useForFit]), cv2_E11.5[useForFit])
plot( NULL, xaxt="n", yaxt="n",
      log="xy", xlim = c(1e-3, 1e4), ylim = c(0.05, 10^2.5),
      xlab = "mean est. count (normalized to size factor)", ylab = "squared coefficient of variation (CV^2)",
      main = "normalized est. count vs CV^2 (plotted in log10 scale)")
axis( 1, 10^(-3:4), c( "0.001", "0.01", "0.1", "1", "10", "100", "1000", "10000"))
axis( 2, 10^(-1:3), c( "0.1", "1", "10", "100", "1000"), las=2 )
abline( h=10^(-1:3), v=10^(-3:4), col="#D0D0D0", lwd=2 )
#################################################################################


##################E14.5  (with filtering out cells with MT-genes ratio > 0.05)
cv2_E14.5 > 1
centering_para<- -1 (-1 or otherwise the fitted curve is upside down, very paculiar!)
fit <- glmgam.fit(cbind(a0=20, altilde=centering_para/means_E14.5[useForFit]), cv2_E14.5[useForFit])
plot( NULL, xaxt="n", yaxt="n",
      log="xy", xlim = c(1e-3, 1e4), ylim = c(1, 10^2.6),
      xlab = "mean est. count (normalized to size factor)", ylab = "squared coefficient of variation (CV^2)",
      main = "normalized est. count vs CV^2 (plotted in log10 scale)")
axis( 1, 10^(-3:4), c( "0.001", "0.01", "0.1", "1", "10", "100", "1000", "10000"))
axis( 2, 10^(0:3), c( "1", "10", "100", "1000"), las=2 )
abline( h=10^(0:3), v=10^(-3:4), col="#D0D0D0", lwd=2 )
#################################################################################






##################E18.5
cv2_E18.5 > 1
centering_para<-6.5
fit <- glmgam.fit(cbind(a0=5, altilde=centering_para/means_E18.5[useForFit]), cv2_E18.5[useForFit])
plot( NULL, xaxt="n", yaxt="n",
      log="xy", xlim = c(1e-3, 1e4), ylim = c(0.75, 10^2.1),
      xlab = "mean est. count (normalized to size factor)", ylab = "squared coefficient of variation (CV^2)",
      main = "normalized est. count vs CV^2 (plotted in log10 scale)")
axis( 1, 10^(-3:4), c( "0.001", "0.01", "0.1", "1", "10", "100", "1000", "10000"))
axis( 2, 10^(-1:3), c( "0.1", "1", "10", "100", "1000"), las=2 )
abline( h=10^(-1:3), v=10^(-3:4), col="#D0D0D0", lwd=2 )
#################################################################################


##################P0
cv2_P0 > 1
centering_para<-6.5
fit <- glmgam.fit(cbind(a0=5, altilde=centering_para/means_E18.5[useForFit]), cv2_E18.5[useForFit])
plot( NULL, xaxt="n", yaxt="n",
      log="xy", xlim = c(1e-3, 1e4), ylim = c(0.75, 10^2.1),
      xlab = "mean est. count (normalized to size factor)", ylab = "squared coefficient of variation (CV^2)",
      main = "normalized est. count vs CV^2 (plotted in log10 scale)")
axis( 1, 10^(-3:4), c( "0.001", "0.01", "0.1", "1", "10", "100", "1000", "10000"))
axis( 2, 10^(-1:3), c( "0.1", "1", "10", "100", "1000"), las=2 )
abline( h=10^(-1:3), v=10^(-3:4), col="#D0D0D0", lwd=2 )
#################################################################################


##################P21
cv2_P21 > 1
centering_para<-3.3
fit <- glmgam.fit(cbind(a0=0.5, altilde=centering_para/means_P21[useForFit]), cv2_P21[useForFit])
plot( NULL, xaxt="n", yaxt="n",
      log="xy", xlim = c(1e-3, 1e4), ylim = c(0.75, 10^2.1),
      xlab = "mean est. count (normalized to size factor)", ylab = "squared coefficient of variation (CV^2)",
      main = "normalized est. count vs CV^2 (plotted in log10 scale)")
axis( 1, 10^(-3:4), c( "0.001", "0.01", "0.1", "1", "10", "100", "1000", "10000"))
axis( 2, 10^(-1:3), c( "0.1", "1", "10", "100", "1000"), las=2 )
abline( h=10^(-1:3), v=10^(-3:4), col="#D0D0D0", lwd=2 )
#################################################################################



##################P3
cv2_P3 > 1
centering_para<-5
fit <- glmgam.fit(cbind(a0=5, altilde=centering_para/means_P7[useForFit]), cv2_P7[useForFit])
plot( NULL, xaxt="n", yaxt="n",
      log="xy", xlim = c(1e-3, 1e4), ylim = c(0.75, 10^2.1),
      xlab = "mean est. count (normalized to size factor)", ylab = "squared coefficient of variation (CV^2)",
      main = "normalized est. count vs CV^2 (plotted in log10 scale)")
axis( 1, 10^(-3:4), c( "0.001", "0.01", "0.1", "1", "10", "100", "1000", "10000"))
axis( 2, 10^(-1:3), c( "0.1", "1", "10", "100", "1000"), las=2 )
abline( h=10^(-1:3), v=10^(-3:4), col="#D0D0D0", lwd=2 )
#################################################################################



##################P7
cv2_P7 > 1
centering_para<-5
fit <- glmgam.fit(cbind(a0=5, altilde=centering_para/means_P7[useForFit]), cv2_P7[useForFit])
plot( NULL, xaxt="n", yaxt="n",
      log="xy", xlim = c(1e-3, 1e4), ylim = c(0.75, 10^2.1),
      xlab = "mean est. count (normalized to size factor)", ylab = "squared coefficient of variation (CV^2)",
      main = "normalized est. count vs CV^2 (plotted in log10 scale)")
axis( 1, 10^(-3:4), c( "0.001", "0.01", "0.1", "1", "10", "100", "1000", "10000"))
axis( 2, 10^(-1:3), c( "0.1", "1", "10", "100", "1000"), las=2 )
abline( h=10^(-1:3), v=10^(-3:4), col="#D0D0D0", lwd=2 )
#################################################################################

##################ALL SAMPLES (NO MT FILTERING, 41 duplicated columns in E14.5 were filtered)
cv2_P7 > 1
centering_para<-6
fit <- glmgam.fit(cbind(a0=5, altilde=centering_para/means_P7[useForFit]), cv2_P7[useForFit])
plot( NULL, xaxt="n", yaxt="n",
      log="xy", xlim = c(1e-3, 1e4), ylim = c(0.75, 10^2.1),
      xlab = "mean est. count (normalized to size factor)", ylab = "squared coefficient of variation (CV^2)",
      main = "normalized est. count vs CV^2 (plotted in log10 scale)")
axis( 1, 10^(-3:4), c( "0.001", "0.01", "0.1", "1", "10", "100", "1000", "10000"))
axis( 2, 10^(-1:3), c( "0.1", "1", "10", "100", "1000"), las=2 )
abline( h=10^(-1:3), v=10^(-3:4), col="#D0D0D0", lwd=2 )


#Fit parameter for sigmoid (or otherwise singular result)
fitmodel <- nls(y~a/(1 + exp(-b * (x-c))), start=list(a=500,b=1,c=2))
#################################################################################


##################ALL Ventricular CMs (Based on All Samples CountCluster results)
cv2_P7 > 1
centering_para<- -1.2
fit <- glmgam.fit(cbind(a0=10, altilde=centering_para/means_All_cms[useForFit]), cv2_All_cms[useForFit])
plot( NULL, xaxt="n", yaxt="n",
      log="xy", xlim = c(1e-3, 1e4), ylim = c(0.75, 10^2.1),
      xlab = "mean est. count (normalized to size factor)", ylab = "squared coefficient of variation (CV^2)",
      main = "normalized est. count vs CV^2 (plotted in log10 scale)")
axis( 1, 10^(-3:4), c( "0.001", "0.01", "0.1", "1", "10", "100", "1000", "10000"))
axis( 2, 10^(-1:3), c( "0.1", "1", "10", "100", "1000"), las=2 )
abline( h=10^(-1:3), v=10^(-3:4), col="#D0D0D0", lwd=2 )


#Fit parameter for sigmoid (or otherwise singular result)
fitmodel <- nls(y~a/(1 + exp(-b * (x-c))), start=list(a=500,b=1,c=2))
#################################################################################



